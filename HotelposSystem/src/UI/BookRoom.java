/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import hotelpossystem.dao.DAOFactory;
import hotelpossystem.dao.UserDAOImplement;
import hotelpossystem.dao.UserDAO;
import hotelpossystem.dao.DatabaseConnection;
import hotelpossystem.dao.NewClass;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Jingshiqing
 */
public class BookRoom extends javax.swing.JFrame {

    /**
     * Creates new form BookRoom
     */
    static BookRoom bookRoom=new BookRoom();
    SelectTimeSlot s=new SelectTimeSlot();    
    public static DefaultTableModel tableModel;
    //JTable tableR=new JTable(tableModel);
    int count;
    public DefaultTableModel getTableModel() {
        return tableModel;
    }
    
    //tableModel= jTableR.getModel();
    public BookRoom() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBF = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableR = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jBtSearch = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jBtSelect = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCBT = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jCBF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "all", "level1", "level2" }));

        jTableR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room number", "floor", "type", "price"
            }
        ));
        jScrollPane1.setViewportView(jTableR);

        jLabel2.setText("floor:");

        jBtSearch.setText("search");
        jBtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtSearchActionPerformed(evt);
            }
        });

        jButton2.setText("back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jBtSelect.setText("Select");

        jLabel1.setText("Type:");

        jCBT.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "all", "normal single", "normal double", "big single", "big double" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(79, 79, 79)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jCBF, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCBT, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jBtSearch)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtSelect)
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCBF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jCBT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtSearchActionPerformed

        DefaultTableModel tableModel = (DefaultTableModel) jTableR.getModel();
        tableModel.setRowCount(0);
        try {
            runn();
        } catch (Exception ex) {
            Logger.getLogger(BookRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(jCBF.getSelectedIndex()==1) {
            if(jCBT.getSelectedIndex()==0) {             
                for(int index=0; index < count;index++ ) {                 
                    if(!tableModel.getValueAt(index,1).equals("level1")) {
                        tableModel.removeRow(index);
                        index--; count--;
                    }
                }
            }
            if(jCBT.getSelectedIndex()==1) {
                for(int index=0; index < count;index++ ) {                 
                    if(!tableModel.getValueAt(index,1).equals("level1")|| !tableModel.getValueAt(index,2).equals("normal1")) {
                        tableModel.removeRow(index);
                        index--; count--;
                    }
                }
            }
            if(jCBT.getSelectedIndex()==2) {
                for(int index=0; index < count;index++ ) {                 
                    if(!tableModel.getValueAt(index,1).equals("level1")|| !tableModel.getValueAt(index,2).equals("normal2")) {
                        tableModel.removeRow(index);
                        index--; count--;
                    }
                }
            }
            if(jCBT.getSelectedIndex()==3) {
                for(int index=0; index < count;index++ ) {                 
                    if(!tableModel.getValueAt(index,1).equals("level1")|| !tableModel.getValueAt(index,2).equals("big1")) {
                        tableModel.removeRow(index);
                        index--; count--;
                    }
                }
            }
            if(jCBT.getSelectedIndex()==4) {
                for(int index=0; index < count;index++ ) {                 
                    if(!tableModel.getValueAt(index,1).equals("level1")|| !tableModel.getValueAt(index,2).equals("big2")) {
                        tableModel.removeRow(index);
                        index--; count--;
                    }
                }
            }
        }    
            if(jCBF.getSelectedIndex()==2) {
                if(jCBT.getSelectedIndex()==0) {             
                    for(int index=0; index < count;index++ ) {                 
                        if(!tableModel.getValueAt(index,1).equals("level2")) {
                            tableModel.removeRow(index);
                            index--; count--;
                        }
                    }
                }
                if(jCBT.getSelectedIndex()==1) {
                    for(int index=0; index < count;index++ ) {                 
                        if(!tableModel.getValueAt(index,1).equals("level2")||!tableModel.getValueAt(index,2).equals("normal1")) {
                            tableModel.removeRow(index);
                            index--; count--;
                        }
                    }
                }
                if(jCBT.getSelectedIndex()==2) {
                    for(int index=0; index < count;index++ ) {                 
                        if(!tableModel.getValueAt(index,1).equals("level1")||!tableModel.getValueAt(index,2).equals("normal2")) {
                            tableModel.removeRow(index);
                            index--; count--;
                        }
                    }
                }
                if(jCBT.getSelectedIndex()==3) {
                    for(int index=0; index < count;index++ ) {                 
                        if(!tableModel.getValueAt(index,1).equals("level2")||!tableModel.getValueAt(index,2).equals("big1")) {
                            tableModel.removeRow(index);
                            index--; count--;
                        }
                    }
                }
            if(jCBT.getSelectedIndex()==4) {
                for(int index=0; index < count;index++ ) {                 
                    if(!tableModel.getValueAt(index,1).equals("level2")|| !tableModel.getValueAt(index,2).equals("big2")) {
                        tableModel.removeRow(index);
                        index--; count--;
                    }
                }
            }
            
        }
    }//GEN-LAST:event_jBtSearchActionPerformed
    
    public void runn() throws Exception {
        count=0;
        DefaultTableModel tableModel = (DefaultTableModel) jTableR.getModel();
        int in =s.from+1;
        int out =s.to+1;
       
        HashSet<String[]> as = new HashSet<>();
        as=DAOFactory.getUserDAOInstance().queryRoomAvailable(in, out);          
        for(String[] a: as) {
            tableModel.addRow(a);
            count++;
        }
        
    }
    
    
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        try {
            runn();
        } catch (Exception ex) {
            Logger.getLogger(BookRoom.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowActivated

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        SelectTimeSlot select=new SelectTimeSlot();
        select.setVisible(true);
        bookRoom.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookRoom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                bookRoom.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton jBtSearch;
    public javax.swing.JButton jBtSelect;
    public javax.swing.JButton jButton2;
    public javax.swing.JComboBox jCBF;
    public javax.swing.JComboBox jCBT;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTableR;
    // End of variables declaration//GEN-END:variables
}
